apply plugin: 'java'

version = 'v0.0.1-11'
ext.mainClassName = 'ch.scbirs.trainingmanager.MainWrapper'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

sourceSets {
    mwrapper {
        java {
            srcDir 'src/main/java'
            include 'ch/scbirs/trainingmanager/MainWrapper.java'
        }
        compileClasspath += main.output
    }
    main {
        java {
            exclude 'ch/scbirs/trainingmanager/MainWrapper.java'
        }
    }
}

jar {
    manifest {
        attributes 'Main-Class': project.ext.mainClassName,
                'Implementation-Title': 'TrainingManager',
                'Implementation-Version': version,
                'provider': 'gradle'
    }
    from sourceSets.mwrapper.output
    archiveName = baseName + "." + extension
}

compileMwrapperJava {
    sourceCompatibility = JavaVersion.VERSION_1_5
    targetCompatibility = JavaVersion.VERSION_1_5
}


processResources {
    doLast {
        def versionfile = new File(destinationDir, 'version.txt')
        versionfile.write(project.version)
    }
}

task dist(type: Copy, dependsOn: ['build', ':Updater:build']) {
    from(project.jar.archivePath)
    //TODO: Add generik solution for this
    from({ project(':Updater').jar.archivePath })
    if (project.hasProperty('dist_location')) {
        into dist_location
    } else {
        into 'build/dist'
    }
    doFirst {
        destinationDir.mkdirs()
    }
    doLast {
        (new File(destinationDir, "version.txt")).write(project.version)
        (new File(destinationDir, "updaterVersion.txt")).write(project(':Updater').version)
    }
}

